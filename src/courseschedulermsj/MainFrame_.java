package courseschedulermsj;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author meganpurr
 */
public class MainFrame_ extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame_
     */
    public String currentSemester;
    private String author;
    private String project;
    private String currentStudentGlobal;
    private java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());

    public MainFrame_() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildClassComboBoxes();
        rebuildCourseComboBoxes();
        rebuildStudentComboBoxes();
        rebuildMultiTables();
    }

    public void rebuildSemesterComboBoxes() {
        //Get list of semesters
        ArrayList<String> semesters = SemesterQueries.getSemesterList();

        //Update combo box model with the semester list
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray(String[]::new)));
        studentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray(String[]::new)));
        //Update label and tracking variable
        if (semesters.isEmpty()) //if list is empty
        {
            currentSemester = "None"; //current is none
            currentSemesterLabel.setText("None, add a semester."); //label is none
        } else {
            currentSemester = semesters.get(semesters.size() - 1); //newest semester
            currentSemesterLabel.setText(currentSemester); //set to newest
        }
        displayScheduleSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));

    }

    public void rebuildClassComboBoxes() {
        ArrayList<String> classes = ClassQueries.getAllClasses(currentSemester);
        selectClassesComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray(String[]::new)));
        displayClassListStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray(String[]::new)));
        studentChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray(String[]::new)));
        dropClassClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray(String[]::new)));
    }

    public void rebuildCourseComboBoxes() {
        ArrayList<String> courses = CourseQueries.getAllCourses();
        addCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray(String[]::new)));
    }

    private void rebuildStudentComboBoxes() {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        scheduleClassesSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        studentChooseStudentDropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        selectStudentDisplayComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
    }

    private void rebuildMultiTables() {
        ArrayList<ClassDescriptions> classes = MultiTableQueries.getAllClassDescriptions(currentSemester);
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel) displayClassesTable.getModel();
        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        for (ClassDescriptions c : classes) {
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getDescription();
            rowData[2] = c.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mainTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        AdminTabbedPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        semesterNameLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        CourseCodeText = new javax.swing.JLabel();
        courseCodeEntry = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        courseDescEntry = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseOutput = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        addClassCourseCodeLabel = new javax.swing.JLabel();
        addClassSeatsLabel = new javax.swing.JLabel();
        addCourseCodeComboBox = new javax.swing.JComboBox<>();
        addSeatsSpinner = new javax.swing.JSpinner();
        addClassSubmitButton = new javax.swing.JButton();
        addClassStatusLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        StudentIDLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        addStudentButton = new javax.swing.JButton();
        studentIDTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        addStudentStatusLabel = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        displayClassListStudentComboBox = new javax.swing.JComboBox<>();
        displayClassListButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        scheduledStudentsTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        waitlistedStudentsTable = new javax.swing.JTable();
        displayClassListLabel = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        dropStudentSubmitButton = new javax.swing.JButton();
        dropStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        jPanel13 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        dropClassClassComboBox = new javax.swing.JComboBox<>();
        adminDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        adminDropClassTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        studentTabbedPane = new javax.swing.JTabbedPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        displayClassesTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        studentSemesterComboBox = new javax.swing.JComboBox<>();
        studentDisplayClassesSelectSemesterButtton = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        selectClassesComboBox = new javax.swing.JComboBox<>();
        scheduleClassesSelectStudentComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        studentScheduleClassesSubmitButton = new javax.swing.JButton();
        studentScheduleClassesLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        displayScheduleSemesterComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        displayCoursesTableModel = new javax.swing.JTable();
        displayStudentScheduleButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        selectStudentDisplayComboBox = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        studentChooseStudentDropClassComboBox = new javax.swing.JComboBox<>();
        studentChooseClassComboBox = new javax.swing.JComboBox<>();
        studentDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        studentDropClassTextArea = new javax.swing.JTextArea();
        scheduleClassesLabel = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        semesterNameLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(semesterNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semesterNameLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Add Semester", jPanel3);

        CourseCodeText.setText("Course Code:");

        jLabel5.setText("Course Description:");

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        addCourseOutput.setText("            ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(CourseCodeText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSubmitButton)
                            .addComponent(courseCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseDescEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addCourseOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(232, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CourseCodeText)
                    .addComponent(courseCodeEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(courseDescEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(addCourseSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCourseOutput)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Add Course", jPanel4);

        addClassCourseCodeLabel.setText("Course Code:");

        addClassSeatsLabel.setText("Seats:");

        addCourseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        addCourseCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCodeComboBoxActionPerformed(evt);
            }
        });

        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitButtonActionPerformed(evt);
            }
        });

        addClassStatusLabel.setText("          ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassCourseCodeLabel)
                            .addComponent(addClassSeatsLabel))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassSubmitButton)
                            .addComponent(addCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addClassCourseCodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassSeatsLabel)
                    .addComponent(addSeatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addClassStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Add Class", jPanel6);

        StudentIDLabel.setText("Student ID:");

        firstNameLabel.setText("First Name:");

        lastNameLabel.setText("Last Name:");

        addStudentButton.setText("Submit");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        addStudentStatusLabel.setText("     ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(StudentIDLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(firstNameLabel)
                            .addGap(18, 18, 18)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(lastNameLabel)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(addStudentButton)
                                .addComponent(lastNameTextField))))
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentIDLabel)
                    .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(addStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Add Student", jPanel7);

        jLabel7.setText("Choose Class:");

        displayClassListStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayClassListButton.setText("Display");
        displayClassListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassListButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Scheduled Students in the Class");

        scheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane5.setViewportView(scheduledStudentsTable);

        jLabel9.setText("Waitlisted Students in the Class in Waitlist Order");

        waitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane6.setViewportView(waitlistedStudentsTable);

        displayClassListLabel.setText("   ");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(27, 27, 27)
                                .addComponent(displayClassListStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(displayClassListButton))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(displayClassListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(387, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(displayClassListStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayClassListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(displayClassListLabel))
        );

        AdminTabbedPane.addTab("Display Class List", jPanel10);

        jLabel10.setText("Choose Student:");

        dropStudentSubmitButton.setText("Submit");
        dropStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentSubmitButtonActionPerformed(evt);
            }
        });

        dropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropStudentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentComboBoxActionPerformed(evt);
            }
        });

        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane2.setViewportView(dropStudentTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropStudentSubmitButton)
                            .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(258, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(dropStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Drop Student", jPanel11);

        jLabel13.setText("Choose Class:");

        dropClassClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminDropClassSubmitButton.setText("Submit");
        adminDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropClassSubmitButtonActionPerformed(evt);
            }
        });

        adminDropClassTextArea.setColumns(20);
        adminDropClassTextArea.setRows(5);
        jScrollPane9.setViewportView(adminDropClassTextArea);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminDropClassSubmitButton)
                            .addComponent(dropClassClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(399, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropClassClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adminDropClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        AdminTabbedPane.addTab("Drop Class", jPanel13);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AdminTabbedPane)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(AdminTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Admin", jPanel1);

        displayClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ));
        jScrollPane8.setViewportView(displayClassesTable);

        jLabel14.setText("Select Semester: ");

        studentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentDisplayClassesSelectSemesterButtton.setText("Submit");
        studentDisplayClassesSelectSemesterButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDisplayClassesSelectSemesterButttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel14)
                        .addGap(36, 36, 36)
                        .addComponent(studentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(studentDisplayClassesSelectSemesterButtton)))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(studentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentDisplayClassesSelectSemesterButtton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        studentTabbedPane.addTab("Display Classes", jPanel14);

        selectClassesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleClassesSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Select Student: ");

        jLabel3.setText("Select Class:");

        studentScheduleClassesSubmitButton.setText("Submit");
        studentScheduleClassesSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentScheduleClassesSubmitButtonActionPerformed(evt);
            }
        });

        studentScheduleClassesLabel.setText("    ");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentScheduleClassesSubmitButton)
                            .addComponent(selectClassesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scheduleClassesSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(studentScheduleClassesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(451, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(selectClassesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleClassesSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(14, 14, 14)
                .addComponent(studentScheduleClassesSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentScheduleClassesLabel)
                .addContainerGap(118, Short.MAX_VALUE))
        );

        studentTabbedPane.addTab("Schedule Classes", jPanel8);

        jLabel6.setText("Select Semester: ");

        displayScheduleSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayScheduleSemesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleSemesterComboBoxActionPerformed(evt);
            }
        });

        displayCoursesTableModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane3.setViewportView(displayCoursesTableModel);

        displayStudentScheduleButton.setText("Display");
        displayStudentScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentScheduleButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("Select Student:");

        selectStudentDisplayComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(selectStudentDisplayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(displayScheduleSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(displayStudentScheduleButton)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(selectStudentDisplayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(displayScheduleSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(displayStudentScheduleButton)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        studentTabbedPane.addTab("Display Schedule", jPanel9);

        jLabel11.setText("Choose Student:");

        jLabel12.setText("Choose Class:");

        studentChooseStudentDropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        studentChooseClassComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentChooseClassComboBoxActionPerformed(evt);
            }
        });

        studentDropClassSubmitButton.setText("Submit");
        studentDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropClassSubmitButtonActionPerformed(evt);
            }
        });

        studentDropClassTextArea.setColumns(20);
        studentDropClassTextArea.setRows(5);
        jScrollPane7.setViewportView(studentDropClassTextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(studentDropClassSubmitButton)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12))
                            .addGap(49, 49, 49)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(studentChooseStudentDropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(studentChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(studentChooseStudentDropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(studentChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentDropClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentTabbedPane.addTab("Drop Class", jPanel12);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentTabbedPane)
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(studentTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        scheduleClassesLabel.setText("       ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(scheduleClassesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(scheduleClassesLabel)
                .addGap(12, 12, 12))
        );

        mainTabbedPane.addTab("Student", jPanel2);

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainTabbedPane)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(changeSemesterButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aboutButton)
                                .addGap(18, 18, 18)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainTabbedPane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project Date: " + currentTimestamp);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);

        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        String course = courseCodeEntry.getText();
        String description = courseDescEntry.getText();

        //if field is empty
        if (course.isEmpty()) {
            addCourseOutput.setText("Enter a value for coursecode.");
            return;
        }
        if (description.isEmpty()) {
            addCourseOutput.setText("Enter a value for description");
            return;
        }
        CourseEntry courseEntry = new CourseEntry(course, description);
        CourseQueries.addCourse(courseEntry);
        addCourseOutput.setText((courseEntry.getCourse()) + " has been added");
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    private void studentScheduleClassesSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentScheduleClassesSubmitButtonActionPerformed
        // TODO add your handling code here:
        String cclass = (String) selectClassesComboBox.getSelectedItem();
        //
        StudentEntry student = (StudentEntry) scheduleClassesSelectStudentComboBox.getSelectedItem();
        //
        String studentt = student.getStudentID();
        String sem = currentSemesterLabel.getText();
        if (cclass.isEmpty()) {
            studentScheduleClassesLabel.setText("Enter a class");
            return;
        }
        if (studentt.isEmpty()) {
            studentScheduleClassesLabel.setText("Enter a student");
            return;
        }
        //get number of seats from class
        int seats = ClassQueries.getClassSeats(sem, cclass);
        if (seats > 0) {
            //insert class into student schedule
            ScheduleEntry entry = new ScheduleEntry(sem, cclass, studentt, "s", currentTimestamp);
            ScheduleQueries.addScheduleEntry(entry);
            //update seats in class
            ClassQueries.removeSeat(cclass, sem);
            studentScheduleClassesLabel.setText(cclass + " has been added " + studentt + "'s schedule for " + sem + ".");
        } else {
            //put student on waitlist
            //insert class into student schedule
            ScheduleEntry entry = new ScheduleEntry(sem, cclass, studentt, "w", currentTimestamp);
            ScheduleQueries.addScheduleEntry(entry);
            studentScheduleClassesLabel.setText(cclass + " has been added " + studentt + "'s waitlist for " + sem + ".");
        }

    }//GEN-LAST:event_studentScheduleClassesSubmitButtonActionPerformed

    private void dropStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        //get picked student
        StudentEntry student = (StudentEntry) dropStudentComboBox.getSelectedItem();

        //get student id
        String id = student.getStudentID();

        //drop student from list
        StudentQueries.dropStudent(id);
        //update label
        dropStudentTextArea.setText(student + " " + id + " has been dropped from the list of students.\n\n");

        // for each semester in semester list
        for (String curSem : SemesterQueries.getSemesterList()) {

            //For each semester
            dropStudentTextArea.append("For Semester: " + curSem + "\n");

            // get student schedule
            ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(curSem, student.getStudentID());

            //set strings
            String droppedCourses = "";
            String scheduledCourses = "";

            //for each entry in scheduleEntry
            for (ScheduleEntry currentEntry : studentSchedule) {

                //drop student from schedule
                ScheduleQueries.dropStudentScheduleByCourse(curSem, student.getStudentID(), currentEntry.getCourseCode());
                dropStudentTextArea.append(student + " has been dropped from " + currentEntry.getCourseCode() + "\n");
                if (currentEntry.getStatus().equals("s")) {
                    ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(curSem, currentEntry.getCourseCode());
                    if (waitlist.size() > 0) {
                        ScheduleEntry waitEntry = waitlist.get(0);
                        ScheduleQueries.updateScheduleEntry(curSem, waitEntry);
                        dropStudentTextArea.append(waitEntry.getStudentID() + " has been scheduled into " + waitEntry.getCourseCode() + "\n");

                    }

                }
            }
            dropStudentTextArea.append(student + " has been removed from all student comboboxes \n");
            rebuildStudentComboBoxes();
        }
    }//GEN-LAST:event_dropStudentSubmitButtonActionPerformed

    private void studentDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        //student
        StudentEntry student = (StudentEntry) studentChooseStudentDropClassComboBox.getSelectedItem();
        //current semester
        String sem = currentSemesterLabel.getText();

        //class to drop
        String courseCode = (String) studentChooseClassComboBox.getSelectedItem();

        //first and last name
        String firstName = student.getFirstName();
        String lastName = student.getLastName();

        //Add text
        studentDropClassTextArea.append(lastName + "," + firstName + " " + student.getStudentID() + " has been dropped from " + courseCode + "\n");
        //studentSchedule
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(sem, student.getStudentID());
        //for each entry in scheduleEntry
        for (ScheduleEntry currentEntry : studentSchedule) {
            //drop student from schedule if it eqals coursecode
            if (currentEntry.getCourseCode().equals(courseCode)) {
                ScheduleQueries.dropStudentScheduleByCourse(sem, student.getStudentID(), courseCode);
                if (currentEntry.getStatus().equals("s")) {
                    ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(sem, currentEntry.getCourseCode());
                    if (waitlist.size() > 0) {
                        ScheduleEntry waitEntry = waitlist.get(0);
                        ScheduleQueries.updateScheduleEntry(sem, waitEntry);
                        studentDropClassTextArea.append(waitEntry.getStudentID() + " has been scheduled into " + waitEntry.getCourseCode() + "\n");
                    }
                }
            }
        }
    }//GEN-LAST:event_studentDropClassSubmitButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        String selectedSemester = (String) currentSemesterComboBox.getSelectedItem();

        // Update label and currentSemester variable
        if (selectedSemester != null && !selectedSemester.isEmpty()) {
            currentSemester = selectedSemester;
            currentSemesterLabel.setText(currentSemester);
        }
        rebuildClassComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        String sem = (String) currentSemesterLabel.getText();
        int seats = (int) addSeatsSpinner.getValue();
        String courseCode = (String) addCourseCodeComboBox.getSelectedItem();
        if (courseCode.isEmpty()) {
            addClassStatusLabel.setText("Enter a class.");
            return;
        }
        ClassEntry classEntry = new ClassEntry(sem, courseCode, seats);

        ClassQueries.addClass(classEntry);

        addClassStatusLabel.setText(classEntry.getCourseCode() + " has been added to " + sem + " semester.");
        rebuildClassComboBoxes();
    }//GEN-LAST:event_addClassSubmitButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:
        String studentID = studentIDTextField.getText();
        String studentFirstName = firstNameTextField.getText();
        String studentLastName = lastNameTextField.getText();

        // Check if the field is empty
        if (studentID.isEmpty()) {
            addStudentStatusLabel.setText("Input field is empty. Please enter a value.");
            return;
        }
        if (studentFirstName.isEmpty()) {
            addStudentStatusLabel.setText("Input field is empty. Please enter a value.");
            return;
        }
        if (studentLastName.isEmpty()) {
            addStudentStatusLabel.setText("Input field is empty. Please enter a value.");
            return;
        }
        StudentEntry studentEntry = new StudentEntry(studentID, studentFirstName, studentLastName);
        StudentQueries.addStudent(studentEntry);
        addStudentStatusLabel.setText(studentEntry.getLastName() + ", " + studentEntry.getFirstName() + " has been added");
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void adminDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropClassSubmitButtonActionPerformed
        // TODO add your handling code here:
        // Reset the text area
        adminDropClassTextArea.setText("");

        // Get current semester and selected class
        String sem = currentSemesterLabel.getText();
        String strClass = (String) dropClassClassComboBox.getSelectedItem();

        // Drop the class
        ClassQueries.dropClass(sem, strClass);

        // Initialize display strings
        String scheduledStudents = "Scheduled students dropped from the course:\n";
        String waitlistedStudents = "Waitlisted students dropped from the course:\n";
        
        //Drop all scheduled students from class
        for (ScheduleEntry currentEntry : ScheduleQueries.getScheduledStudentsByCourse(sem, strClass)){
            StudentEntry student = StudentQueries.getStudentID(currentEntry.getStudentID());
            ScheduleQueries.dropStudentScheduleByCourse(sem, student.getStudentID(), strClass);
            scheduledStudents += student.getLastName()+", "+student.getFirstName()+", "+student.getStudentID()+")\n";
        }
        for (ScheduleEntry currentEntry : ScheduleQueries.getWaitlistedStudentsByCourse(sem, strClass)) {
        StudentEntry student = StudentQueries.getStudentID(currentEntry.getStudentID());
        ScheduleQueries.dropStudentScheduleByCourse(sem, student.getStudentID(), strClass);
        waitlistedStudents += student.getLastName() + ", " + student.getFirstName() + " (" + student.getStudentID() + ")\n";
        }
        // Drop the schedule entirely
        ScheduleQueries.dropScheduleByCourse(sem, strClass);

        // Display
        adminDropClassTextArea.append(scheduledStudents + "\n");
        adminDropClassTextArea.append(waitlistedStudents);

        rebuildCourseComboBoxes();
        rebuildClassComboBoxes();
        rebuildMultiTables();
    }//GEN-LAST:event_adminDropClassSubmitButtonActionPerformed

    private void displayStudentScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentScheduleButtonActionPerformed
        // TODO add your handling code here:

        //current semester
        String sem = (String) displayScheduleSemesterComboBox.getSelectedItem();

        //list of students
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();

        //student ID
        int indexOfStudent = selectStudentDisplayComboBox.getSelectedIndex();
        if (indexOfStudent < 0 || indexOfStudent >= students.size()) {
            return;
        }
        StudentEntry studentEntry = students.get(indexOfStudent);
        String studentID = studentEntry.getStudentID();

        ArrayList<ScheduleEntry> classes = ScheduleQueries.getScheduleByStudent(sem, studentID);
        DefaultTableModel model = (DefaultTableModel) displayCoursesTableModel.getModel();
        model.setNumRows(0);
        Object[] rowData = new Object[2];
        for (ScheduleEntry c : classes) {
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getStatus();
            model.addRow(rowData);
        }
    }//GEN-LAST:event_displayStudentScheduleButtonActionPerformed

    private void studentDisplayClassesSelectSemesterButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDisplayClassesSelectSemesterButttonActionPerformed
        // TODO add your handling code here:
        String sem = (String) studentSemesterComboBox.getSelectedItem();
        ArrayList<ClassDescriptions> classes = MultiTableQueries.getAllClassDescriptions(sem);
        DefaultTableModel displayCoursesTable = (DefaultTableModel) displayClassesTable.getModel();
        displayCoursesTable.setNumRows(0);
        Object[] rowData = new Object[3];
        for (ClassDescriptions c : classes) {
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getDescription();
            rowData[2] = c.getSeats();
            displayCoursesTable.addRow(rowData);
        }
    }//GEN-LAST:event_studentDisplayClassesSelectSemesterButttonActionPerformed

    private void displayClassListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassListButtonActionPerformed
        // TODO add your handling code here:
        String sem = currentSemesterLabel.getText();
        String cclass = (String) displayClassListStudentComboBox.getSelectedItem();

        if (cclass.isEmpty()) {
            displayClassListLabel.setText("Select Class");
            return;
        }
        ArrayList<StudentEntry> students = MultiTableQueries.getScheduledStudentsByClass(sem, cclass);
        DefaultTableModel scheduledModel = (DefaultTableModel) scheduledStudentsTable.getModel();
        scheduledModel.setNumRows(0);
        Object[] rowData = new Object[3];
        for (StudentEntry s : students) {
            rowData[0] = s.getLastName();
            rowData[1] = s.getFirstName();
            rowData[2] = s.getStudentID();
            scheduledModel.addRow(rowData);
        }
        ArrayList<StudentEntry> waitlistedStudents = MultiTableQueries.getWaitlistedStudentsByClass(currentSemester, cclass);
        DefaultTableModel waitlistedModel = (DefaultTableModel) waitlistedStudentsTable.getModel();
        waitlistedModel.setNumRows(0);
        Object[] wrowData = new Object[3];
        for (StudentEntry s : waitlistedStudents) {
            wrowData[0] = s.getLastName();
            wrowData[1] = s.getFirstName();
            wrowData[2] = s.getStudentID();
            waitlistedModel.addRow(wrowData);
        }

    }//GEN-LAST:event_displayClassListButtonActionPerformed

    private void addCourseCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseCodeComboBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_addCourseCodeComboBoxActionPerformed

    private void dropStudentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentComboBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_dropStudentComboBoxActionPerformed

    private void studentChooseClassComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentChooseClassComboBoxActionPerformed

    }//GEN-LAST:event_studentChooseClassComboBoxActionPerformed

    private void displayScheduleSemesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleSemesterComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayScheduleSemesterComboBoxActionPerformed

    private void checkData() {
        try {
            try (FileReader reader = new FileReader("xzq789yy.txt")) {
                BufferedReader breader = new BufferedReader(reader);

                String encodedAuthor = breader.readLine();
                String encodedProject = breader.readLine();
                byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
                author = new String(decodedAuthor);
                byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
                project = new String(decodedProject);
            }

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Fall 2024";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                // encode the output data.
                try (BufferedWriter bufferedWriter = new BufferedWriter(writer)) {
                    // encode the output data.
                    String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                    bufferedWriter.write(encodedAuthor);
                    bufferedWriter.newLine();

                    String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                    bufferedWriter.write(encodedProject);
                }
            } catch (IOException ioe) {
                System.exit(1);
            }

        } catch (IOException e) {
            System.exit(1);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame_.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame_().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AdminTabbedPane;
    private javax.swing.JLabel CourseCodeText;
    private javax.swing.JLabel StudentIDLabel;
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel addClassCourseCodeLabel;
    private javax.swing.JLabel addClassSeatsLabel;
    private javax.swing.JLabel addClassStatusLabel;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JComboBox<String> addCourseCodeComboBox;
    private javax.swing.JLabel addCourseOutput;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JSpinner addSeatsSpinner;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton adminDropClassSubmitButton;
    private javax.swing.JTextArea adminDropClassTextArea;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JTextField courseCodeEntry;
    private javax.swing.JTextField courseDescEntry;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayClassListButton;
    private javax.swing.JLabel displayClassListLabel;
    private javax.swing.JComboBox<String> displayClassListStudentComboBox;
    private javax.swing.JTable displayClassesTable;
    private javax.swing.JTable displayCoursesTableModel;
    private javax.swing.JComboBox<String> displayScheduleSemesterComboBox;
    private javax.swing.JButton displayStudentScheduleButton;
    private javax.swing.JComboBox<String> dropClassClassComboBox;
    private javax.swing.JComboBox<String> dropStudentComboBox;
    private javax.swing.JButton dropStudentSubmitButton;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JLabel scheduleClassesLabel;
    private javax.swing.JComboBox<String> scheduleClassesSelectStudentComboBox;
    private javax.swing.JTable scheduledStudentsTable;
    private javax.swing.JComboBox<String> selectClassesComboBox;
    private javax.swing.JComboBox<String> selectStudentDisplayComboBox;
    private javax.swing.JLabel semesterNameLabel;
    private javax.swing.JComboBox<String> studentChooseClassComboBox;
    private javax.swing.JComboBox<String> studentChooseStudentDropClassComboBox;
    private javax.swing.JButton studentDisplayClassesSelectSemesterButtton;
    private javax.swing.JButton studentDropClassSubmitButton;
    private javax.swing.JTextArea studentDropClassTextArea;
    private javax.swing.JTextField studentIDTextField;
    private javax.swing.JLabel studentScheduleClassesLabel;
    private javax.swing.JButton studentScheduleClassesSubmitButton;
    private javax.swing.JComboBox<String> studentSemesterComboBox;
    private javax.swing.JTabbedPane studentTabbedPane;
    private javax.swing.JTable waitlistedStudentsTable;
    // End of variables declaration//GEN-END:variables
}
